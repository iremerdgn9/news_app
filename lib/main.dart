import 'package:flutter/material.dart';
import 'package:favorite_button/favorite_button.dart';
import 'package:news_app/categories/finans.dart';
import 'package:news_app/data/news_service.dart';
import 'package:news_app/models/article.dart';
import 'package:url_launcher/url_launcher.dart';
import 'package:news_app/categories/technology.dart';
import 'package:news_app/categories/favoriler.dart';
import 'package:news_app/categories/signIn.dart';
import 'package:news_app/data/tec_service.dart';
import 'package:news_app/provider/theme_provider.dart';
import 'package:news_app/models/source.dart';

enum Menu {
  itemOne,
  itemTwo,
}

void main() {
  runApp(const MyApp());
}

class MyApp extends StatelessWidget {
  const MyApp({Key? key}) : super(key: key);

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'News App ',
      debugShowCheckedModeBanner: false,
      themeMode: ThemeMode.system,
      theme: MyThemes.lightTheme,
      darkTheme: MyThemes.darkTheme,
      home: const MyStatefulWidget(title: 'News App'),
    );
  }
}

class MyStatefulWidget extends StatefulWidget {
  const MyStatefulWidget({Key? key, required this.title}) : super(key: key);
  final String title;

  @override
  State<MyStatefulWidget> createState() => _MyStatefulWidgetState();
}

class _MyStatefulWidgetState extends State<MyStatefulWidget> {
  List<Articles> articles = [];

  @override
  void initState() {
    NewsService.getNews().then((value) {
      setState(() {
        articles = value!;
      });
    });
    super.initState();
    TecService.getAutogenerated().then((value) {
      setState(() {
        articles = value!;
      });
    });
    super.initState();
  }

  int _clickIndex = 0;
  String _selectedMenu = ' ';

  static const optionStyle =
  TextStyle(fontWeight: FontWeight.bold);
  static const List<Widget> _widgetOptions = <Widget>[
    Text(
      'Index 0: HomePage',
      style: optionStyle,
    ),
    Text(
      'Index 1: Search',
      style: optionStyle,
    ),
    Text(
      'Index 2: Settings',
      style: optionStyle,
    ),
  ];
  Color bgColor = Colors.pink;

  dynamic child;

  void _onItemTapped(int index) {
    setState(() {
      _clickIndex = index;
    });
    if (index == 0) {
      bgColor = Colors.purpleAccent;
      setState(() {
        Navigator.push(context, MaterialPageRoute(
            builder: (context) => MyApp()));
      });
    } else if (index == 1) {
      setState(() {
        bgColor = Colors.deepPurpleAccent;
      });
    } else if (index == 2) {
      setState(() {
        bgColor = Colors.lightGreen;
      });
    }
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text(widget.title),
        centerTitle: true,
        actions: <Widget>[
          IconButton(
            icon: Icon(Icons.dark_mode_outlined, size: 25.0,),
            tooltip: 'Dark Mode',
            onPressed: () {
              Navigator.push(context, MaterialPageRoute(
                  builder: (context) => MyApp()));
            },
          ),
          PopupMenuButton<Menu>(
              onSelected: (Menu item) {
                Navigator.push(context, MaterialPageRoute(
                    builder: (context) => signIn()));
                setState(() {
                  _selectedMenu = item.name;
                });
              },
              itemBuilder: (BuildContext context) =>
              <PopupMenuEntry<Menu>>[
                PopupMenuItem<Menu>(
                  value: Menu.itemOne,
                  child: Text('Sign In'),
                  onTap: () {
                    Navigator.push(context, MaterialPageRoute(
                        builder: (context) => signIn()));
                  },
                ),
                PopupMenuItem<Menu>(
                  value: Menu.itemTwo,
                  child: Text('Sign Up'),
                  onTap: () {},
                ),
              ],
          ),

          IconButton(
            icon: const Icon(Icons.navigate_next),
            tooltip: 'Go to the next page',
            onPressed: () {
              Navigator.push(context, MaterialPageRoute<void>(
                builder: (BuildContext context) {
                  return Scaffold(
                    appBar: AppBar(
                      title: const Text('Next page'),
                    ),
                    body: Center(
                      child: Column(
                        mainAxisAlignment: MainAxisAlignment.start,
                        crossAxisAlignment: CrossAxisAlignment.center,
                        children: [
                          const SizedBox(
                            width: 50,
                            height: 50,
                          ),
                          const Align(
                            alignment: Alignment.topCenter,
                            child: Text(
                              'News App Project by İrem Erdoğan',
                              style: TextStyle(
                                fontSize: 20,
                                fontWeight: FontWeight.w600,
                                backgroundColor: Colors.deepPurpleAccent,
                              ),
                            ),
                          ),
                          Container(
                            decoration: BoxDecoration(
                              border: Border.all(
                                  color: Colors.black,
                                  width: 5.0,
                                  style: BorderStyle.solid),),
                            child: Image.asset('assets/irem.jpg',
                              alignment: Alignment.topCenter,
                              width: 300,
                              height: 300,
                            ),
                          ),
                          StarButton(
                            isStarred: true,
                            iconColor: Colors.pink,
                            iconDisabledColor: Colors.yellowAccent,
                            valueChanged: (_isStarred) {
                              print('Is Starred : $_isStarred');
                            },
                          ),
                        ],
                      ),
                    ),
                  );
                },
              ));
            },
          ),
        ],
      ),
      body: Center(
        child: ListView.builder(
            itemCount: articles.length,
            itemBuilder: (context, index) {
              return Card(
                child: Column(
                  mainAxisAlignment: MainAxisAlignment.center,
                  children: <Widget>[
                    FavoriteButton(
                      isFavorite: false,
                      valueChanged: (_isFavorite) {
                        print('favorite: $_isFavorite');
                      },
                    ),
                    Image.network(articles[index].urlToImage.toString()),

                    ListTile(
                      leading: Icon(Icons.arrow_circle_down),
                      minLeadingWidth: 3,
                      title: Text(articles[index].title.toString(),
                        style: TextStyle(
                            fontSize: 20, fontWeight: FontWeight.bold),),
                      subtitle: Text(articles[index].author.toString()),
                    ),
                    Padding(
                      padding: const EdgeInsets.all(16.0),
                      child: Text(articles[index].description.toString(),
                        style: TextStyle(fontSize: 18),),
                    ),
                    ButtonBar(
                      alignment: MainAxisAlignment.start,
                      children: [
                        FlatButton(
                          color: Colors.white30,
                          textColor: Colors.deepPurple,
                          shape: RoundedRectangleBorder(
                              borderRadius: BorderRadius.circular(5)),
                          onPressed: () async {
                            await launch(articles[index].url.toString());
                          },
                          child: Text(
                            'Habere Git',
                            style: TextStyle(fontSize: 18),
                          ),
                        ),
                        StarButton(
                          isStarred: true,
                          iconSize: 50,
                          iconColor: Colors.yellowAccent,
                          iconDisabledColor: Colors.deepOrangeAccent,
                          valueChanged: (_isStarred) {
                            print('Is Starred : $_isStarred');
                          },
                        ),
                      ],
                    ),
                  ],
                ),
              );
            }),
      ),

      bottomNavigationBar: BottomNavigationBar(
        backgroundColor: Theme.of(context).appBarTheme.backgroundColor,
       // backgroundColor: bgColor,
        selectedItemColor: Colors.white,
        unselectedItemColor: const Color.fromARGB(130, 255, 255, 255),
        selectedFontSize: 20,
        unselectedFontSize: 16,
        showSelectedLabels: true,
        showUnselectedLabels: true,
        items: <BottomNavigationBarItem>[
          BottomNavigationBarItem(
            icon: Icon(Icons.home),
            label: 'HomePage',
            backgroundColor: bgColor,
          ),
          BottomNavigationBarItem(
            icon: Icon(Icons.search),
            label: 'Search',
            backgroundColor: bgColor,
          ),
          BottomNavigationBarItem(
            icon: Icon(Icons.settings),
            label: 'Settings',
            backgroundColor: bgColor,
          ),
        ],
        currentIndex: _clickIndex,
        onTap: _onItemTapped,
      ),

      drawer: Drawer(
        elevation: 16.0,
        child: Column(
          children: <Widget>[
             const UserAccountsDrawerHeader(
              currentAccountPictureSize: Size.square(85.0),
              accountName: Text("İrem Erdoğan",
                style: TextStyle(fontSize: 20, fontWeight: FontWeight.bold),),
              accountEmail: Text("irmerdgn06@gmail.com"),
              currentAccountPicture: CircleAvatar(
                backgroundImage: NetworkImage(
                    'https://icon-library.com/images/newspaper-icon-png/newspaper-icon-png-16.jpg'),
                backgroundColor: Colors.amberAccent,
              ),
            ),
            Column(
              children: <Widget>[
                IconButton(
                  icon: Icon(Icons.tag_faces, size: 30.0,),
                  tooltip: 'Smile',
                  onPressed: () {},
                ),
                ListTile(
                  leading: Icon(Icons.home),
                  title: const Text("Ana Sayfa",
                    style: TextStyle(fontSize: 18),),
                  trailing: const Icon(Icons.arrow_right),
                  onTap: () {
                    Navigator.push(context, MaterialPageRoute(
                        builder: (context) => MyApp()));
                  },
                ),
                ExpansionTile(
                  leading: Icon(Icons.category_outlined),
                  title: Text("Kategoriler",
                    style: TextStyle(fontSize: 18),),
                  trailing: Icon(Icons.arrow_drop_down_circle_outlined),
                  children: [
                    ListTile(
                      title: const Text("Teknoloji",
                        style: TextStyle(fontSize: 18),),
                      leading: const Icon(Icons.mobile_friendly),
                      onTap: () {
                        Navigator.push(context, MaterialPageRoute(
                            builder: (context) => technology()));
                      },
                    ),
                    Divider(
                      height: 0.1,
                    ),
                    ListTile(
                        title: const Text("Finans",
                          style: TextStyle(fontSize: 18),),
                        leading: const Icon(Icons.data_thresholding_outlined),
                        onTap: () {
                          Navigator.push(context, MaterialPageRoute(
                              builder: (context) => finans()));
                        }
                    ),
                  ],
                ),
                ListTile(
                    title: const Text("Favorilerim",
                      style: TextStyle(fontSize: 18),),
                    leading: const Icon(Icons.favorite_border_rounded),
                    trailing: Icon(Icons.arrow_right),
                    onTap: () {
                      Navigator.push(context, MaterialPageRoute(
                          builder: (context) => favoriler()));
                    }
                ),
              ],
            ),
          ],
        ),
      ),
    );
  }
}
class  FavPage extends StatelessWidget {
  const FavPage ({Key? key}) : super(key: key);

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text('Favorite Icon '),
      ),
      body: SizedBox(
      width: MediaQuery.of(context).size.width,
        child: Column(
      mainAxisAlignment: MainAxisAlignment.start,
      crossAxisAlignment: CrossAxisAlignment.end,
        children: [
          FavoriteButton(
            isFavorite: false,
            iconColor: Colors.pink,
            iconDisabledColor: Colors.pink,
            valueChanged: (_isFavorite) {
          print('Is Favorite : $_isFavorite');
    },
    ),
    ],
      ),
    ),
    );
  }
}

